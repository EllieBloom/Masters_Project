plot_drop_rebound_lockdown3<- ggplot(data=regional_drop_summary_3, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound_3, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop_3, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 3") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 28, y = 15, label = lm_eqn(regional_drop_summary_3), parse = TRUE, color="royalblue")
plot_drop_rebound_lockdown3
plot_drop_rebound_lockdown3<- ggplot(data=regional_drop_summary_3, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound_3, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop_3, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 3") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 28, y = 15.2, label = lm_eqn(regional_drop_summary_3), parse = TRUE, color="royalblue")
plot_drop_rebound_lockdown3
plot_drop_rebound_lockdown3<- ggplot(data=regional_drop_summary_3, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound_3, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop_3, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 3") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 28, y = 15, label = lm_eqn(regional_drop_summary_3), parse = TRUE, color="royalblue")
plot_drop_rebound_lockdown3
plot_drop_rebound_lockdown3<- ggplot(data=regional_drop_summary_3, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound_3, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop_3, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 3") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
plot_drop_rebound_lockdown3
plot_drop_rebound_lockdown3 + geom_text(x = 28, y = 15, label = lm_eqn(regional_drop_summary_3), parse = TRUE, color="royalblue")
plot_drop_rebound_lockdown3<- ggplot(data=regional_drop_summary_3, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound_3, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop_3, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 3") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 28, y = 15, label = lm_eqn(regional_drop_summary_3), parse = TRUE, color="royalblue")
plot_drop_rebound_lockdown3
setwd("Users/elliebloom/Desktop/Masters/Project/Analysis/NPIs_mobility/Outputs/Plots")
ggsave("Regional_lockdown3_drop_rebound_plot.pdf",plot_drop_rebound_lockdown3)
regional_drop_summary <- read.csv("/Users/elliebloom/Desktop/Masters/Project/Analysis/NPIs_mobility/Outputs/Regional_lockdown1_drop.csv")
regional_drop_summary
regional_drop_summary$Drop <-as.numeric(regional_drop_summary$Drop)
regional_drop_summary$Rebound_30days<- as.numeric(regional_drop_summary$Rebound_30days)
# Adding rebound after 4 weeks
library(ggrepel)
median_drop <- median(regional_drop_summary$Drop )
median_rebound <- median(regional_drop_summary$Rebound_30days)
# Linear model, ready for labelling on the graph
lm_eqn <- function(df){
m <- lm(Rebound_30days ~ Drop, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
# Summary of lm
summary(lm(Rebound_30days ~ Drop, regional_drop_summary))
# Note p<0.0001
# Graph
plot_drop_rebound_lockdown1<- ggplot(data=regional_drop_summary, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 1") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 75, y = 28, label = lm_eqn(regional_drop_summary), parse = TRUE, color="royalblue", hjust=0)
plot_drop_rebound_lockdown1
setwd("Users/elliebloom/Desktop/Masters/Project/Analysis/NPIs_mobility/Outputs/Plots")
ggsave("Regional_lockdown1_drop_rebound_plot.pdf",plot_drop_rebound_lockdown1)
plot_drop_rebound_lockdown1
# Summary of lm
summary(lm(Rebound_30days ~ Drop, regional_drop_summary))
# Graph
plot_drop_rebound_lockdown1<- ggplot(data=regional_drop_summary, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 1") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 60, y = 18, label = lm_eqn(regional_drop_summary), parse = TRUE, color="royalblue", hjust=0)
plot_drop_rebound_lockdown1
plot_drop_rebound_lockdown1<- ggplot(data=regional_drop_summary, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 1") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
plot_drop_rebound_lockdown1
plot_drop_rebound_lockdown1 +
geom_text(x = 60, y = 18, label = lm_eqn(regional_drop_summary), parse = TRUE, color="royalblue", hjust=0)
plot_drop_rebound_lockdown1<- ggplot(data=regional_drop_summary, aes(x=Drop,y=Rebound_30days)) +
geom_point(shape=20)+
geom_text_repel(aes(label=sub_region_1),size=2.5) +
geom_hline(yintercept=median_rebound, linetype="dashed", color="red")+
geom_vline(xintercept=median_drop, linetype="dashed", color="red")+
geom_smooth(method='lm',se=FALSE, color="royalblue")+
xlab("Drop from average 2 weeks before lockdown to minimum (percentage points)")+
ylab("Rebound in mobility after 30 days (percentage points)") +
ggtitle("Lockdown 1") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))+
geom_text(x = 60, y = 18, label = lm_eqn(regional_drop_summary), parse = TRUE, color="royalblue", hjust=0)
lot_drop_rebound_lockdown1
plot_drop_rebound_lockdown1
setwd("Users/elliebloom/Desktop/Masters/Project/Analysis/NPIs_mobility/Outputs/Plots")
ggsave("Regional_lockdown1_drop_rebound_plot.pdf",plot_drop_rebound_lockdown1)
plot_drop_rebound_lockdown1 +
setwd("Users/elliebloom/Desktop/Masters/Project/Analysis/NPIs_mobility/Outputs/Plots")
plot_drop_rebound_lockdown3
ggsave("Regional_lockdown3_drop_rebound_plot.pdf",plot_drop_rebound_lockdown3)
# Setup
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
drop_lockdown1 <-drop_lockdown1[order(-drop_lockdown1$Drop),]
drop_lockdown1$sub_region_1 <-as.factor(drop_lockdown1$sub_region_1)
barplot_drop_lockdown1 <- ggplot(data=drop_lockdown1, aes(x=sub_region_1,y=Drop))+
geom_bar(stat="identity", color="#F8766D", fill="#F8766D", width=0.25) +
scale_x_discrete(limits=drop_lockdown1$sub_region_1) +
xlab("")+
scale_y_continuous(expand=c(0,0)) +
ylab("Drop in mobility (percentage points)") +
ggtitle("Lockdown 1") +
coord_flip() +
theme_light() +
theme(plot.title = element_text(hjust = 0.5))
barplot_drop_lockdown1
# Setup
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
# Loading Google data
google_2020<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2020_GB_Region_Mobility_Report.csv")
google_2021<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2021_GB_Region_Mobility_Report.csv")
google_2022<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2022_GB_Region_Mobility_Report.csv")
str(google_overall$date) # Dates are currently stored as characters
google_overall$date <- as.Date(google_overall$date,format="%Y-%m-%d")
str(google_overall$date)
google_gb <- google_overall %>% filter(sub_region_1=="") # Where there is no sub-region, the data is for GB overall
# Setup
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
google_2020<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2020_GB_Region_Mobility_Report.csv")
google_2020<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2020_GB_Region_Mobility_Report.csv")
google_2020<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2020_GB_Region_Mobility_Report.csv")
google_overall <- rbind(google_2020,google_2021,google_2022)
str(google_overall$date) # Dates are currently stored as characters
str(google_overall$date) # Dates are currently stored as characters
google_2021<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2021_GB_Region_Mobility_Report.csv")
google_2022<-read.csv("/Users/elliebloom/Desktop/Masters/Project/Data/Google/2022_GB_Region_Mobility_Report.csv")
google_overall <- rbind(google_2020,google_2021,google_2022)
str(google_overall$date) # Dates are currently stored as characters
google_overall$date <- as.Date(google_overall$date,format="%Y-%m-%d")
str(google_overall$date)
google_gb <- google_overall %>% filter(sub_region_1=="") # Where there is no sub-region, the data is for GB overall
# Movement compared to baseline
plot(x=google_gb$date, y=google_gb$retail_and_recreation_percent_change_from_baseline, type="l", xlab="Date (2020)", ylab="Percentage change from baseline (%)",
main="Google data - change from baseline movement UK in 2020", col=" navy blue", ylim=c(-100,150))
abline(h=0, col="dark gray", lty="dashed")
lines(x=google_gb$date, y=google_gb$grocery_and_pharmacy_percent_change_from_baseline, col="dark green")
lines(x=google_gb$date, y=google_gb$parks_percent_change_from_baseline, col="red")
lines(x=google_gb$date, y=google_gb$transit_stations_percent_change_from_baseline, col="orange")
lines(x=google_gb$date, y=google_gb$workplaces_percent_change_from_baseline, col="purple")
lines(x=google_gb$date, y=google_gb$residential_percent_change_from_baseline, col="green")
legend("topright", legend=c("Retail and recreation", "Grocery and pharmacy" , "Parks", "Transit stations", "Workplaces", "Residential"),
col=c("navy blue", "dark green", "red", "orange" , "purple", "green"), pch=4, cex=0.75)
# Creating a 7 day moving average for each point (average 6 days afterwards - can change to centre if not)
library(zoo) # Used for moving average
google_gb <- google_gb %>%
mutate(retail_and_recreation_rolling_av = rollmean(retail_and_recreation_percent_change_from_baseline, k=7, fill=NA, align="center") ,
grocery_and_pharmacy_rolling_av = rollmean(grocery_and_pharmacy_percent_change_from_baseline, k=7, fill=NA, align="center") ,
parks_rolling_av = rollmean(parks_percent_change_from_baseline, k=7, fill=NA, align="center"),
transit_stations_rolling_av = rollmean(transit_stations_percent_change_from_baseline, k=7, fill=NA, align="center"),
workplaces_rolling_av = rollmean(workplaces_percent_change_from_baseline, k=7, fill=NA, align="center"),
residential_rolling_av = rollmean(residential_percent_change_from_baseline, k=7, fill=NA, align="center"))
colnames(google_gb)
colour_palette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#000000")
plot(x=google_gb$date, y=google_gb$retail_and_recreation_rolling_av, type="l", xlab="Time", ylab="Percentage change from baseline (%)",
main="Change from baseline movement UK (%)", col=colour_palette[1], ylim=c(-100,150))
abline(h=0, col="dark gray", lty="dashed")
lines(x=google_gb$date, y=google_gb$grocery_and_pharmacy_rolling_av, col=colour_palette[2])
lines(x=google_gb$date, y=google_gb$parks_rolling_av, col=colour_palette[3])
lines(x=google_gb$date, y=google_gb$transit_stations_rolling_av, col=colour_palette[4])
lines(x=google_gb$date, y=google_gb$workplaces_rolling_av, col=colour_palette[5])
lines(x=google_gb$date, y=google_gb$residential_rolling_av, col=colour_palette[6])
legend("topright", legend=c("Retail and recreation", "Grocery and pharmacy" , "Parks", "Transit stations", "Workplaces", "Residential"),
col=colour_palette, pch=4, cex=0.75)
library(reshape2)
google_gb_long <- melt(google_gb[,c("retail_and_recreation_rolling_av",
"grocery_and_pharmacy_rolling_av", "parks_rolling_av",
"transit_stations_rolling_av", "workplaces_rolling_av",
"residential_rolling_av","date")], id.vars="date")
# Plot
library(grid)
labels=c("Retail and recreation","Grocery and pharmacy",
"Parks","Transit stations",
"Workplaces","Residential")
plot_baseline <- ggplot(data=google_gb_long, aes(x=date,y=value,color=variable)) +
geom_line() +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_color_hue(labels = labels)+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline
labels_list <- as_labeller( c("retail_and_recreation_rolling_av"="Retail and recreation",
"grocery_and_pharmacy_rolling_av"="Grocery and pharmacy",
"parks_rolling_av" = "Parks",
"transit_stations_rolling_av"="Transit stations",
"workplaces_rolling_av"= "Workplaces",
"residential_rolling_av" = "Residential" ))
location_labeller <- function(variable,value){
return(labels_list[value])
}
# Baseline plot
plot_wrap <- ggplot(data=google_gb_long, aes(x=date,y=value)) +
facet_wrap(variable~., ncol=1, labeller=labels_list, strip.position="top", scales = "free") +
geom_line(color="dark blue") +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
#ggtitle("Google mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_color_hue(labels = labels)+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "none",
strip.background=element_rect(color="white", fill="white"),
strip.text=element_text(color="black", size=10, face="bold"))
plot_wrap
lockdown_dates=c("2020-03-26","2020-11-05","2021-01-06","2021-12-08")
plot_lockdowns <- plot_wrap + geom_vline(xintercept = as.numeric(as.Date(lockdown_dates)), linetype="dashed", colour="red",size=0.25)
plot_lockdowns
plot_baseline_lockdowns <- plot_baseline + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-03-29","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-08","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2)
easing_dates=c("2020-06-15", "2020-12-02", "2021-04-12", "2022-01-27")
plot_easing <- plot_wrap + geom_vline(xintercept=as.numeric(as.Date(easing_dates)), linetype="dashed", colour="dark green",size=0.25)
plot_easing
plot_dates <- plot_lockdowns + geom_vline(xintercept=as.numeric(as.Date(easing_dates)), linetype="dashed", colour="dark green",size=0.25)
plot_dates
labels_1 <- data.frame(variable=c("retail_and_recreation_rolling_av",
"grocery_and_pharmacy_rolling_av", "parks_rolling_av", "transit_stations_rolling_av",
"workplaces_rolling_av", "residential_rolling_av"),
label=c("","Restrictions","","","",""))
labels_2 <- data.frame(variable=c("retail_and_recreation_rolling_av",
"grocery_and_pharmacy_rolling_av", "parks_rolling_av", "transit_stations_rolling_av",
"workplaces_rolling_av", "residential_rolling_av"),
label=c("","Easing","","","",""))
plot_labelled <- plot_dates + geom_text(x=as.Date("2022-03-20","%Y-%m-%d"), y=-20, aes(label=label), data=labels_1, color="Red",hjust=0) +
geom_text(x=as.Date("2022-03-20","%Y-%m-%d"), y=-30, aes(label=label), data=labels_2, color="Dark green",hjust=0)
plot_labelled
plot_wrap + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-26","%Y-%m-%d"), ymin=-100, ymax=100, alpha=0.2)
# Unfortunately this changes the axis to all be the same
plot_baseline_lockdowns <- plot_baseline + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-04-12","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-8","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("text",x=as.Date("2020-03-26","%Y-%m-%d"), y=130, label="1st lockdown", hjust=0, color="gray23") +
annotate("text",x=as.Date("2020-12-20","%Y-%m-%d"), y=130, label="2nd lockdown",  hjust=1, color="gray23") +
annotate("text",x=as.Date("2021-02-15","%Y-%m-%d"), y=130, label="3rd lockdown",  hjust=0.5, color="gray23") +
annotate("text",x=as.Date("2022-01-05","%Y-%m-%d"), y=130, label="Plan B measures",  hjust=0.5, color="gray23")
plot_baseline_lockdowns
google_gb_long
google_gb_long_workplace <- google_gb_long[google_gb_long$variable=="workplace_rolling_av"]
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value,color=variable)) +
geom_line() +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_color_hue(labels = labels)+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
google_gb_long_workplace
table(google_gb_long$variable)
google_gb_long_workplace <- google_gb_long[google_gb_long$variable=="workplaces_rolling_av"]
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value,color=variable)) +
geom_line() +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_color_hue(labels = labels)+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
google_gb_long[google_gb_long$variable=="workplaces_rolling_av"]
google_gb_long_workplace <- google_gb_long[google_gb_long$variable==workplaces_rolling_av]
table(google_gb_long$variable)
google_gb_long_workplace <- google_gb_long[google_gb_long$variable="workplaces_rolling_av"]
google_gb_long_workplace <- google_gb_long[google_gb_long$variable=="workplaces_rolling_av"]
google_gb_long_workplace <- google_gb_long[google_gb_long$variable=="workplaces_rolling_av",]
google_gb_long_workplace
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value,color=variable)) +
geom_line() +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_color_hue(labels = labels)+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value)) +
geom_line() +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google workplace mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value)) +
geom_line(color="navy blue") +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google workplace mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
plot_baseline_workplace
plot_baseline_lockdowns_workplace <- plot_baseline_workplace + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-04-12","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-8","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("text",x=as.Date("2020-03-26","%Y-%m-%d"), y=130, label="1st lockdown", hjust=0, color="gray23") +
annotate("text",x=as.Date("2020-12-20","%Y-%m-%d"), y=130, label="2nd lockdown",  hjust=1, color="gray23") +
annotate("text",x=as.Date("2021-02-15","%Y-%m-%d"), y=130, label="3rd lockdown",  hjust=0.5, color="gray23") +
annotate("text",x=as.Date("2022-01-05","%Y-%m-%d"), y=130, label="Plan B measures",  hjust=0.5, color="gray23")
plot_baseline_lockdowns_workplace
plot_baseline_workplace
plot_baseline_lockdowns_workplace <- plot_baseline_workplace + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-04-12","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-8","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("text",x=as.Date("2020-03-26","%Y-%m-%d"), y=130, label="1st lockdown", hjust=0, color="gray23") +
annotate("text",x=as.Date("2020-12-20","%Y-%m-%d"), y=130, label="2nd lockdown",  hjust=1, color="gray23") +
annotate("text",x=as.Date("2021-02-15","%Y-%m-%d"), y=130, label="3rd lockdown",  hjust=0.5, color="gray23") +
annotate("text",x=as.Date("2022-01-05","%Y-%m-%d"), y=130, label="Plan B measures",  hjust=0.5, color="gray23")
plot_baseline_lockdowns_workplace
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value)) +
geom_line(color="navy blue") +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google workplace mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_y_continuous(c(-75,25))
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
plot_baseline_lockdowns_workplace <- plot_baseline_workplace + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-04-12","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-8","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("text",x=as.Date("2020-03-26","%Y-%m-%d"), y=130, label="1st lockdown", hjust=0, color="gray23") +
annotate("text",x=as.Date("2020-12-20","%Y-%m-%d"), y=130, label="2nd lockdown",  hjust=1, color="gray23") +
annotate("text",x=as.Date("2021-02-15","%Y-%m-%d"), y=130, label="3rd lockdown",  hjust=0.5, color="gray23") +
annotate("text",x=as.Date("2022-01-05","%Y-%m-%d"), y=130, label="Plan B measures",  hjust=0.5, color="gray23")
plot_baseline_lockdowns_workplace
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value)) +
geom_line(color="navy blue") +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google workplace mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
scale_y_continuous(c(-75,25))
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
plot_baseline_workplace <- ggplot(data=google_gb_long_workplace, aes(x=date,y=value)) +
geom_line(color="navy blue") +
xlab("") +
ylab ("7-day rolling average change from baseline movement (%)") +
ggtitle("Google workplace mobility in the UK") +
labs(color = "") + # This means that the title for the legent is blank
scale_x_date(breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "3 months"),
minor_breaks = function(x) seq.Date(from = min(x),
to = max(x),
by = "1 months"),
date_labels="%b %Y") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),legend.position = "bottom")
plot_baseline_workplace
plot_baseline_lockdowns_workplace <- plot_baseline_workplace + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=125, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-04-12","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-8","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("text",x=as.Date("2020-03-26","%Y-%m-%d"), y=10, label="1st lockdown", hjust=0, color="gray23") +
annotate("text",x=as.Date("2020-12-20","%Y-%m-%d"), y=10, label="2nd lockdown",  hjust=1, color="gray23") +
annotate("text",x=as.Date("2021-02-15","%Y-%m-%d"), y=10, label="3rd lockdown",  hjust=0.5, color="gray23") +
annotate("text",x=as.Date("2022-01-05","%Y-%m-%d"), y=10, label="Plan B measures",  hjust=0.5, color="gray23")
plot_baseline_lockdowns_workplace
plot_baseline_lockdowns_workplace <- plot_baseline_workplace + annotate("rect", xmin=as.Date("2020-03-26","%Y-%m-%d"), xmax = as.Date("2020-06-15","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("rect", xmin=as.Date("2020-11-05","%Y-%m-%d"), xmax = as.Date("2020-12-02","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-01-06","%Y-%m-%d"), xmax = as.Date("2021-04-12","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("rect", xmin=as.Date("2021-12-8","%Y-%m-%d"), xmax = as.Date("2022-01-27","%Y-%m-%d"), ymin=-80, ymax=5, alpha=0.2) +
annotate("text",x=as.Date("2020-03-26","%Y-%m-%d"), y=10, label="1st lockdown", hjust=0, color="gray23") +
annotate("text",x=as.Date("2020-12-20","%Y-%m-%d"), y=10, label="2nd lockdown",  hjust=1, color="gray23") +
annotate("text",x=as.Date("2021-02-15","%Y-%m-%d"), y=10, label="3rd lockdown",  hjust=0.5, color="gray23") +
annotate("text",x=as.Date("2022-01-05","%Y-%m-%d"), y=10, label="Plan B measures",  hjust=0.5, color="gray23")
plot_baseline_lockdowns_workplace
